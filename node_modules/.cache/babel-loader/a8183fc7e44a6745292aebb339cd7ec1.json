{"ast":null,"code":"import \"antd/lib/tooltip/style\";\nimport _Tooltip from \"antd/lib/tooltip\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/popover/style\";\nimport _Popover from \"antd/lib/popover\";\nimport \"antd/lib/popconfirm/style\";\nimport _Popconfirm from \"antd/lib/popconfirm\";\nvar _jsxFileName = \"/Users/zhangzhuang/React/react-project/src/components/SysIcon/index.jsx\";\nimport React from \"react\";\nimport \"./index.less\";\nexport default (props => {\n  const {\n    code,\n    type,\n    text,\n    size,\n    btnSize = \"default\",\n    btnType,\n    danger,\n    ghost,\n    className,\n    onClick,\n    placement,\n    children\n  } = props;\n  const title = text ? text : null;\n\n  const click = () => {\n    onClick && onClick();\n  };\n\n  const icon = code ? /*#__PURE__*/React.createElement(\"i\", Object.assign({\n    style: {\n      fontSize: size\n    },\n    className: `iconfont sys-icon ${className || \"\"} ${code} `\n  }, onClick && !type && {\n    onClick: () => click()\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  })) : children;\n  const types = {\n    pop: /*#__PURE__*/React.createElement(_Popconfirm, {\n      trigger: \"hover\",\n      title: title,\n      arrowPointAtCenter: true,\n      overlayClassName: \"pop-confirm-icon\",\n      placement: placement || \"topRight\",\n      onConfirm: () => click(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, icon),\n    popText: /*#__PURE__*/React.createElement(_Popover, {\n      placement: placement || \"topRight\",\n      arrowPointAtCenter: true,\n      content: title,\n      overlayClassName: \"pop-sysicon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, icon),\n    btn: /*#__PURE__*/React.createElement(_Button, {\n      ghost: ghost,\n      size: btnSize,\n      type: btnType,\n      danger: danger,\n      className: \"flex-ac sys-icon-btn\",\n      onClick: () => click(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, icon, \" \", title),\n    default: /*#__PURE__*/React.createElement(_Tooltip, {\n      arrowPointAtCenter: true,\n      placement: placement || \"topLeft\",\n      title: title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, icon)\n  };\n  return icon ? types[type] || types.default : null;\n});","map":{"version":3,"sources":["/Users/zhangzhuang/React/react-project/src/components/SysIcon/index.jsx"],"names":["React","props","code","type","text","size","btnSize","btnType","danger","ghost","className","onClick","placement","children","title","click","icon","fontSize","types","pop","popText","btn","default"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAIA,OAAO,cAAP;AAEA,gBAAgBC,KAAD,IAAW;AACtB,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA,IAAP;AAAaC,IAAAA,IAAb;AAAmBC,IAAAA,IAAnB;AAAyBC,IAAAA,OAAO,GAAG,SAAnC;AAA8CC,IAAAA,OAA9C;AAAuDC,IAAAA,MAAvD;AAA+DC,IAAAA,KAA/D;AAAsEC,IAAAA,SAAtE;AAAiFC,IAAAA,OAAjF;AAA0FC,IAAAA,SAA1F;AAAqGC,IAAAA;AAArG,MAAiHZ,KAAvH;AACA,QAAMa,KAAK,GAAGV,IAAI,GAAGA,IAAH,GAAU,IAA5B;;AACA,QAAMW,KAAK,GAAG,MAAM;AAACJ,IAAAA,OAAO,IAAIA,OAAO,EAAlB;AAAqB,GAA1C;;AAEA,QAAMK,IAAI,GACNd,IAAI,gBACA;AAAG,IAAA,KAAK,EAAE;AAACe,MAAAA,QAAQ,EAAEZ;AAAX,KAAV;AAA4B,IAAA,SAAS,EAAG,qBAAoBK,SAAS,IAAI,EAAG,IAAGR,IAAK;AAApF,KAA6FS,OAAO,IAAI,CAACR,IAAZ,IAAoB;AAACQ,IAAAA,OAAO,EAAE,MAAMI,KAAK;AAArB,GAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADA,GAGAF,QAJR;AAOH,QAAMK,KAAK,GAAG;AACPC,IAAAA,GAAG,eACC;AACI,MAAA,OAAO,EAAC,OADZ;AAEI,MAAA,KAAK,EAAEL,KAFX;AAGI,MAAA,kBAAkB,MAHtB;AAII,MAAA,gBAAgB,EAAC,kBAJrB;AAKI,MAAA,SAAS,EAAEF,SAAS,IAAI,UAL5B;AAMI,MAAA,SAAS,EAAE,MAAMG,KAAK,EAN1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQKC,IARL,CAFG;AAaPI,IAAAA,OAAO,eACH;AAAS,MAAA,SAAS,EAAER,SAAS,IAAI,UAAjC;AAA6C,MAAA,kBAAkB,MAA/D;AAAgE,MAAA,OAAO,EAAEE,KAAzE;AAAgF,MAAA,gBAAgB,EAAC,aAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKE,IADL,CAdG;AAkBPK,IAAAA,GAAG,eACC;AAAQ,MAAA,KAAK,EAAEZ,KAAf;AAAsB,MAAA,IAAI,EAAEH,OAA5B;AAAqC,MAAA,IAAI,EAAEC,OAA3C;AAAoD,MAAA,MAAM,EAAEC,MAA5D;AAAoE,MAAA,SAAS,EAAC,sBAA9E;AAAqG,MAAA,OAAO,EAAE,MAAMO,KAAK,EAAzH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,IADL,OACYF,KADZ,CAnBG;AAuBPQ,IAAAA,OAAO,eACH;AAAS,MAAA,kBAAkB,MAA3B;AAA4B,MAAA,SAAS,EAAEV,SAAS,IAAI,SAApD;AAA+D,MAAA,KAAK,EAAEE,KAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKE,IADL;AAxBG,GAAd;AA8BG,SAAOA,IAAI,GAAGE,KAAK,CAACf,IAAD,CAAL,IAAee,KAAK,CAACI,OAAxB,GAAkC,IAA7C;AACH,CA3CD","sourcesContent":["import React from \"react\";\n\nimport {Button, Popconfirm, Popover, Tooltip} from \"antd\";\n\nimport \"./index.less\";\n\nexport default (props) => {\n    const {code, type, text, size, btnSize = \"default\", btnType, danger, ghost, className, onClick, placement, children} = props;\n    const title = text ? text : null;\n    const click = () => {onClick && onClick()};\n\n    const icon =\n        code ? (\n            <i style={{fontSize: size}} className={`iconfont sys-icon ${className || \"\"} ${code} `} {...(onClick && !type && {onClick: () => click()})} />\n        ) : (\n            children\n        );\n\n\tconst types = {\n        pop: (\n            <Popconfirm\n                trigger=\"hover\"\n                title={title}\n                arrowPointAtCenter\n                overlayClassName=\"pop-confirm-icon\"\n                placement={placement || \"topRight\"}\n                onConfirm={() => click()}\n            >\n                {icon}\n            </Popconfirm>\n        ),\n        popText: (\n            <Popover placement={placement || \"topRight\"} arrowPointAtCenter content={title} overlayClassName=\"pop-sysicon\">\n                {icon}\n            </Popover>\n        ),\n        btn: (\n            <Button ghost={ghost} size={btnSize} type={btnType} danger={danger} className=\"flex-ac sys-icon-btn\" onClick={() => click()}>\n                {icon} {title}\n            </Button>\n        ),\n        default: (\n            <Tooltip arrowPointAtCenter placement={placement || \"topLeft\"} title={title}>\n                {icon}\n            </Tooltip>\n        ),\n    };\n\n    return icon ? types[type] || types.default : null;\n}\n"]},"metadata":{},"sourceType":"module"}