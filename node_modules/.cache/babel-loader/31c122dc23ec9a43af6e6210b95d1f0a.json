{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useMergedState;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _useState3 = _interopRequireDefault(require(\"./useState\"));\n/**\n * Similar to `useState` but will use props value if provided.\n * Note that internal use rc-util `useState` hook.\n */\n\n\nfunction useMergedState(defaultStateValue, option) {\n  var _ref = option || {},\n      defaultValue = _ref.defaultValue,\n      value = _ref.value,\n      onChange = _ref.onChange,\n      postState = _ref.postState;\n\n  var _useState = (0, _useState3.default)(function () {\n    if (value !== undefined) {\n      return value;\n    }\n\n    if (defaultValue !== undefined) {\n      return typeof defaultValue === 'function' ? defaultValue() : defaultValue;\n    }\n\n    return typeof defaultStateValue === 'function' ? defaultStateValue() : defaultStateValue;\n  }),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      innerValue = _useState2[0],\n      setInnerValue = _useState2[1];\n\n  var mergedValue = value !== undefined ? value : innerValue;\n\n  if (postState) {\n    mergedValue = postState(mergedValue);\n  } // setState\n\n\n  var onChangeRef = React.useRef(onChange);\n  onChangeRef.current = onChange;\n  var triggerChange = React.useCallback(function (newValue, ignoreDestroy) {\n    setInnerValue(newValue, ignoreDestroy);\n\n    if (mergedValue !== newValue && onChangeRef.current) {\n      onChangeRef.current(newValue, mergedValue);\n    }\n  }, [mergedValue, onChangeRef]); // Effect of reset value to `undefined`\n\n  var prevValueRef = React.useRef(value);\n  React.useEffect(function () {\n    if (value === undefined && value !== prevValueRef.current) {\n      setInnerValue(value);\n    }\n\n    prevValueRef.current = value;\n  }, [value]);\n  return [mergedValue, triggerChange];\n}","map":{"version":3,"sources":["/Users/zhangzhuang/React/react-project/node_modules/rc-util/lib/hooks/useMergedState.js"],"names":["_interopRequireWildcard","require","_interopRequireDefault","Object","defineProperty","exports","value","default","useMergedState","_slicedToArray2","React","_useState3","defaultStateValue","option","_ref","defaultValue","onChange","postState","_useState","undefined","_useState2","innerValue","setInnerValue","mergedValue","onChangeRef","useRef","current","triggerChange","useCallback","newValue","ignoreDestroy","prevValueRef","useEffect"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useMergedState;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _useState3 = _interopRequireDefault(require(\"./useState\"));\n\n/**\n * Similar to `useState` but will use props value if provided.\n * Note that internal use rc-util `useState` hook.\n */\nfunction useMergedState(defaultStateValue, option) {\n  var _ref = option || {},\n      defaultValue = _ref.defaultValue,\n      value = _ref.value,\n      onChange = _ref.onChange,\n      postState = _ref.postState;\n\n  var _useState = (0, _useState3.default)(function () {\n    if (value !== undefined) {\n      return value;\n    }\n\n    if (defaultValue !== undefined) {\n      return typeof defaultValue === 'function' ? defaultValue() : defaultValue;\n    }\n\n    return typeof defaultStateValue === 'function' ? defaultStateValue() : defaultStateValue;\n  }),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      innerValue = _useState2[0],\n      setInnerValue = _useState2[1];\n\n  var mergedValue = value !== undefined ? value : innerValue;\n\n  if (postState) {\n    mergedValue = postState(mergedValue);\n  } // setState\n\n\n  var onChangeRef = React.useRef(onChange);\n  onChangeRef.current = onChange;\n  var triggerChange = React.useCallback(function (newValue, ignoreDestroy) {\n    setInnerValue(newValue, ignoreDestroy);\n\n    if (mergedValue !== newValue && onChangeRef.current) {\n      onChangeRef.current(newValue, mergedValue);\n    }\n  }, [mergedValue, onChangeRef]); // Effect of reset value to `undefined`\n\n  var prevValueRef = React.useRef(value);\n  React.useEffect(function () {\n    if (value === undefined && value !== prevValueRef.current) {\n      setInnerValue(value);\n    }\n\n    prevValueRef.current = value;\n  }, [value]);\n  return [mergedValue, triggerChange];\n}"]},"metadata":{},"sourceType":"script"}